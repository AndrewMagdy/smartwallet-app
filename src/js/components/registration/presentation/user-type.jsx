/* eslint-disable */
// @TODO fix issues
import React from 'react'
import Radium from 'radium'
import {FlatButton} from 'material-ui'
import theme from '../../../styles/jolocom-theme'
import registrationStyles from '../styles'
import HoverButton from '../../common/hover-button'

// @FIX this will extend the registrationStyles
// Use Object.assign({}, ...) to clone the object
const STYLES = Object.assign(registrationStyles, {
  content: {
    display: 'flex',
    flexDirection: 'column',
    flex: 1
  },
  tile: {
    display: 'flex',
    flex: 1,
    flexDirection: 'column',
    margin: '8px 0 8px',
    borderRadius: '2px',
    primary: false,
    backgroundColor: theme.jolocom.gray1,
    selectedColor: theme.palette.primary1Color,
    textAlign: 'center',
    padding: '16px',
    boxSizing: 'border-box'
  },
  tileinside: {
    color: theme.jolocom.gray5,
    display: 'flex',
    flexDirection: 'column',
    flex: 1,
    alignItems: 'stretch',
    fontWeight: 200,
    fontSize: '18px'
  },
  img: {
    flex: 1,
    userSelect: 'none',
    backgroundPosition: 'center',
    backgroundRepeat: 'no-repeat',
    backgroundSize: 'contain',
    marginBottom: '8px'
  }
})


const UserType = (props) => {

  const messageWhy = (
    <div>
      If you select the <b>Geek</b> option, you are the keeper of your
      passphrase that was randomly generated by the mouse moving you just did
      to uncover the picture. You must be prepared to keep the passphrase you
      in a safe place where you are not going to loose it and where others
      can't get to it. This phrase and a secret pin is how you 'login' to your
      wallet in the future. <br /><br />If you select the <b>No Hassle</b>
      option, we will save your passphrase for you, but you will then need a
      password to get it.
    </div>
  )
  // @FIX this code is very hard to read
  // use a getStyles function for dynamic styles, don't do it inline here
  // use methods for event handlers
  // eg: onClick={this._handleExpertClick}
  // actually this component is a bit too completed to be just a bare function :)
  return <div style={STYLES.container}>
    <div style={STYLES.header}>
      {'Hi ' + props.user + '!, are you...' /* @FIX use a string template */}
    </div>
    <div style={STYLES.content}>
      <HoverButton
        backgroundColor={STYLES.tile.backgroundColor}
        hoverColor={STYLES.tile.selectedColor}
        style={STYLES.tile}
        onClick={()=>props.onSelect('expert')}>
        <div style={STYLES.tileinside}>
          <div style={{...STYLES.img, ...{
            backgroundImage: 'url(/img/img_techguy.svg)'
          }}} />...a total tech Geek and want to be in absolute control?
        </div>
      </HoverButton>
      <HoverButton
        backgroundColor={STYLES.tile.backgroundColor}
        hoverColor={STYLES.tile.selectedColor}
        style={STYLES.tile}
        onClick={()=>props.onSelect('layman')}>
        <div style={STYLES.tileinside}>
          <div style={{...STYLES.img, ...{
            backgroundImage: 'url(/img/img_nohustle.svg)'
          }}} />...the laid-back type, who doesn't want any hassle.
        </div>
      </HoverButton>
    </div>
    <div style={STYLES.footer}>
      <FlatButton onClick={()=>props.onWhySelect(messageWhy)}>
      WHY?
      </FlatButton>
    </div>
  </div>
}

UserType.propTypes = {
  value: React.PropTypes.string.isRequired,
  valid: React.PropTypes.bool.isRequired,
  onSelect: React.PropTypes.func.isRequired,
  onWhySelect: React.PropTypes.func.isRequired,
  user: React.PropTypes.string
}







export default Radium(UserType)
/* eslint-enable */
